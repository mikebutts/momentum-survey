// /pages/api/submit.ts
import { google } from 'googleapis';
import type { NextApiRequest, NextApiResponse } from 'next';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  const body = req.body;

  try {
    // Authenticate
    const auth = new google.auth.GoogleAuth({
      credentials: {
        client_email: process.env.GOOGLE_CLIENT_EMAIL,
        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
      },
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });

    const sheets = google.sheets({ version: 'v4', auth });

    // Spreadsheet ID and sheet name
    const spreadsheetId = process.env.SPREADSHEET_ID as string;
    const sheetName = 'Responses'; // or whatever your tab is named

    // Format values to insert
    const values = [
      [
        body.q1 || '',
        body.q2 || '',
        Array.isArray(body.q3) ? body.q3.join(', ') : body.q3 || '',
        body.q4 || '',
        body.q5 || '',
        new Date().toISOString(),
      ],
    ];

    await sheets.spreadsheets.values.append({
      spreadsheetId,
      range: `${sheetName}!A:F`,
      valueInputOption: 'RAW',
      requestBody: {
        values,
      },
    });

    res.status(200).json({ message: 'Success' });
  } catch (error) {
    console.error('Error appending to Google Sheet:', error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
}
